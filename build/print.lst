ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"print.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.printString,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	printString
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	printString:
  25              	.LFB703:
  26              		.file 1 "grbl/print.c"
   1:grbl/print.c  **** /*
   2:grbl/print.c  ****   print.c - Functions for formatting output strings
   3:grbl/print.c  ****   Part of Grbl
   4:grbl/print.c  **** 
   5:grbl/print.c  ****   Copyright (c) 2011-2016 Sungeun K. Jeon for Gnea Research LLC
   6:grbl/print.c  ****   Copyright (c) 2009-2011 Simen Svale Skogsrud
   7:grbl/print.c  ****   Copyright (c) 2018-2019 Thomas Truong
   8:grbl/print.c  **** 
   9:grbl/print.c  ****   Grbl is free software: you can redistribute it and/or modify
  10:grbl/print.c  ****   it under the terms of the GNU General Public License as published by
  11:grbl/print.c  ****   the Free Software Foundation, either version 3 of the License, or
  12:grbl/print.c  ****   (at your option) any later version.
  13:grbl/print.c  **** 
  14:grbl/print.c  ****   Grbl is distributed in the hope that it will be useful,
  15:grbl/print.c  ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:grbl/print.c  ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:grbl/print.c  ****   GNU General Public License for more details.
  18:grbl/print.c  **** 
  19:grbl/print.c  ****   You should have received a copy of the GNU General Public License
  20:grbl/print.c  ****   along with Grbl.  If not, see <http://www.gnu.org/licenses/>.
  21:grbl/print.c  **** */
  22:grbl/print.c  **** 
  23:grbl/print.c  **** #include "grbl.h"
  24:grbl/print.c  **** 
  25:grbl/print.c  **** 
  26:grbl/print.c  **** void printString(const char *s)
  27:grbl/print.c  **** {
  27              		.loc 1 27 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 2


  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 27 0
  38 0002 0446     		mov	r4, r0
  28:grbl/print.c  ****   while (*s)
  39              		.loc 1 28 0
  40 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  41              	.LVL1:
  42 0006 28B1     		cbz	r0, .L1
  43              	.LVL2:
  44              	.L3:
  29:grbl/print.c  ****     serial_write(*s++);
  45              		.loc 1 29 0
  46 0008 FFF7FEFF 		bl	serial_write
  47              	.LVL3:
  28:grbl/print.c  ****   while (*s)
  48              		.loc 1 28 0
  49 000c 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
  50              	.LVL4:
  51 0010 0028     		cmp	r0, #0
  52 0012 F9D1     		bne	.L3
  53              	.LVL5:
  54              	.L1:
  30:grbl/print.c  **** }
  55              		.loc 1 30 0
  56 0014 10BD     		pop	{r4, pc}
  57              		.cfi_endproc
  58              	.LFE703:
  60 0016 00BF     		.section	.text.print_uint8_base10,"ax",%progbits
  61              		.align	1
  62              		.p2align 2,,3
  63              		.global	print_uint8_base10
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	print_uint8_base10:
  70              	.LFB704:
  31:grbl/print.c  **** 
  32:grbl/print.c  **** // void printIntegerInBase(unsigned long n, unsigned long base)
  33:grbl/print.c  **** // {
  34:grbl/print.c  **** // 	unsigned char buf[8 * sizeof(long)]; // Assumes 8-bit chars.
  35:grbl/print.c  **** // 	unsigned long i = 0;
  36:grbl/print.c  **** //
  37:grbl/print.c  **** // 	if (n == 0) {
  38:grbl/print.c  **** // 		serial_write('0');
  39:grbl/print.c  **** // 		return;
  40:grbl/print.c  **** // 	}
  41:grbl/print.c  **** //
  42:grbl/print.c  **** // 	while (n > 0) {
  43:grbl/print.c  **** // 		buf[i++] = n % base;
  44:grbl/print.c  **** // 		n /= base;
  45:grbl/print.c  **** // 	}
  46:grbl/print.c  **** //
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 3


  47:grbl/print.c  **** // 	for (; i > 0; i--)
  48:grbl/print.c  **** // 		serial_write(buf[i - 1] < 10 ?
  49:grbl/print.c  **** // 			'0' + buf[i - 1] :
  50:grbl/print.c  **** // 			'A' + buf[i - 1] - 10);
  51:grbl/print.c  **** // }
  52:grbl/print.c  **** 
  53:grbl/print.c  **** 
  54:grbl/print.c  **** // Prints an uint8 variable in base 10.
  55:grbl/print.c  **** void print_uint8_base10(uint8_t n)
  56:grbl/print.c  **** {
  71              		.loc 1 56 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              	.LVL6:
  57:grbl/print.c  ****   uint8_t digit_a = 0;
  58:grbl/print.c  ****   uint8_t digit_b = 0;
  59:grbl/print.c  ****   if (n >= 100) { // 100-255
  76              		.loc 1 59 0
  77 0000 6328     		cmp	r0, #99
  56:grbl/print.c  ****   uint8_t digit_a = 0;
  78              		.loc 1 56 0
  79 0002 70B5     		push	{r4, r5, r6, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 16
  82              		.cfi_offset 4, -16
  83              		.cfi_offset 5, -12
  84              		.cfi_offset 6, -8
  85              		.cfi_offset 14, -4
  56:grbl/print.c  ****   uint8_t digit_a = 0;
  86              		.loc 1 56 0
  87 0004 0546     		mov	r5, r0
  88              		.loc 1 59 0
  89 0006 20D9     		bls	.L11
  90              	.LVL7:
  60:grbl/print.c  ****     digit_a = '0' + n % 10;
  61:grbl/print.c  ****     n /= 10;
  62:grbl/print.c  ****   }
  63:grbl/print.c  ****   if (n >= 10) { // 10-99
  64:grbl/print.c  ****     digit_b = '0' + n % 10;
  65:grbl/print.c  ****     n /= 10;
  91              		.loc 1 65 0
  92 0008 1C48     		ldr	r0, .L14
  93 000a A0FB0530 		umull	r3, r0, r0, r5
  94 000e 4009     		lsrs	r0, r0, #5
  66:grbl/print.c  ****   }
  67:grbl/print.c  ****   serial_write('0' + n);
  95              		.loc 1 67 0
  96 0010 3030     		adds	r0, r0, #48
  97 0012 FFF7FEFF 		bl	serial_write
  98              	.LVL8:
  61:grbl/print.c  ****   }
  99              		.loc 1 61 0
 100 0016 1A48     		ldr	r0, .L14+4
 101 0018 A0FB0534 		umull	r3, r4, r0, r5
 102 001c E408     		lsrs	r4, r4, #3
  64:grbl/print.c  ****     n /= 10;
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 4


 103              		.loc 1 64 0
 104 001e E3B2     		uxtb	r3, r4
 105 0020 A0FB0320 		umull	r2, r0, r0, r3
 106 0024 C008     		lsrs	r0, r0, #3
 107 0026 00EB8000 		add	r0, r0, r0, lsl #2
 108 002a A3EB4000 		sub	r0, r3, r0, lsl #1
 109 002e 3030     		adds	r0, r0, #48
  68:grbl/print.c  ****   if (digit_b) { serial_write(digit_b); }
 110              		.loc 1 68 0
 111 0030 C0B2     		uxtb	r0, r0
 112 0032 FFF7FEFF 		bl	serial_write
 113              	.LVL9:
  60:grbl/print.c  ****     n /= 10;
 114              		.loc 1 60 0
 115 0036 04EB8400 		add	r0, r4, r4, lsl #2
 116 003a A5EB4000 		sub	r0, r5, r0, lsl #1
 117 003e 3030     		adds	r0, r0, #48
  69:grbl/print.c  ****   if (digit_a) { serial_write(digit_a); }
 118              		.loc 1 69 0
 119 0040 C0B2     		uxtb	r0, r0
  70:grbl/print.c  **** }
 120              		.loc 1 70 0
 121 0042 BDE87040 		pop	{r4, r5, r6, lr}
 122              	.LCFI2:
 123              		.cfi_remember_state
 124              		.cfi_restore 14
 125              		.cfi_restore 6
 126              		.cfi_restore 5
 127              		.cfi_restore 4
 128              		.cfi_def_cfa_offset 0
 129              	.LVL10:
  69:grbl/print.c  ****   if (digit_a) { serial_write(digit_a); }
 130              		.loc 1 69 0
 131 0046 FFF7FEBF 		b	serial_write
 132              	.LVL11:
 133              	.L11:
 134              	.LCFI3:
 135              		.cfi_restore_state
  63:grbl/print.c  ****     digit_b = '0' + n % 10;
 136              		.loc 1 63 0
 137 004a 0928     		cmp	r0, #9
 138 004c 05D8     		bhi	.L12
 139              		.loc 1 70 0
 140 004e BDE87040 		pop	{r4, r5, r6, lr}
 141              	.LCFI4:
 142              		.cfi_remember_state
 143              		.cfi_restore 14
 144              		.cfi_restore 6
 145              		.cfi_restore 5
 146              		.cfi_restore 4
 147              		.cfi_def_cfa_offset 0
  67:grbl/print.c  ****   if (digit_b) { serial_write(digit_b); }
 148              		.loc 1 67 0
 149 0052 3030     		adds	r0, r0, #48
 150              	.LVL12:
 151 0054 C0B2     		uxtb	r0, r0
 152 0056 FFF7FEBF 		b	serial_write
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 5


 153              	.LVL13:
 154              	.L12:
 155              	.LCFI5:
 156              		.cfi_restore_state
  65:grbl/print.c  ****   }
 157              		.loc 1 65 0
 158 005a 0A26     		movs	r6, #10
 159 005c B0FBF6F4 		udiv	r4, r0, r6
  67:grbl/print.c  ****   if (digit_b) { serial_write(digit_b); }
 160              		.loc 1 67 0
 161 0060 04F13000 		add	r0, r4, #48
 162              	.LVL14:
 163 0064 C0B2     		uxtb	r0, r0
 164 0066 FFF7FEFF 		bl	serial_write
 165              	.LVL15:
  64:grbl/print.c  ****     n /= 10;
 166              		.loc 1 64 0
 167 006a 06FB1450 		mls	r0, r6, r4, r5
 168              		.loc 1 70 0
 169 006e BDE87040 		pop	{r4, r5, r6, lr}
 170              	.LCFI6:
 171              		.cfi_restore 14
 172              		.cfi_restore 6
 173              		.cfi_restore 5
 174              		.cfi_restore 4
 175              		.cfi_def_cfa_offset 0
  64:grbl/print.c  ****     n /= 10;
 176              		.loc 1 64 0
 177 0072 3030     		adds	r0, r0, #48
  68:grbl/print.c  ****   if (digit_a) { serial_write(digit_a); }
 178              		.loc 1 68 0
 179 0074 C0B2     		uxtb	r0, r0
 180 0076 FFF7FEBF 		b	serial_write
 181              	.LVL16:
 182              	.L15:
 183 007a 00BF     		.align	2
 184              	.L14:
 185 007c 1F85EB51 		.word	1374389535
 186 0080 CDCCCCCC 		.word	-858993459
 187              		.cfi_endproc
 188              	.LFE704:
 190              		.section	.text.print_uint8_base2_ndigit,"ax",%progbits
 191              		.align	1
 192              		.p2align 2,,3
 193              		.global	print_uint8_base2_ndigit
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu softvfp
 199              	print_uint8_base2_ndigit:
 200              	.LFB705:
  71:grbl/print.c  **** 
  72:grbl/print.c  **** 
  73:grbl/print.c  **** // Prints an uint8 variable in base 2 with desired number of desired digits.
  74:grbl/print.c  **** void print_uint8_base2_ndigit(uint8_t n, uint8_t digits) {
 201              		.loc 1 74 0
 202              		.cfi_startproc
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 6


 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205              	.LVL17:
 206 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 207              	.LCFI7:
 208              		.cfi_def_cfa_offset 24
 209              		.cfi_offset 3, -24
 210              		.cfi_offset 4, -20
 211              		.cfi_offset 5, -16
 212              		.cfi_offset 6, -12
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
  75:grbl/print.c  ****   unsigned char buf[digits];
 215              		.loc 1 75 0
 216 0002 CB1D     		adds	r3, r1, #7
 217 0004 03F4FC73 		and	r3, r3, #504
  74:grbl/print.c  ****   unsigned char buf[digits];
 218              		.loc 1 74 0
 219 0008 00AF     		add	r7, sp, #0
 220              	.LCFI8:
 221              		.cfi_def_cfa_register 7
 222              		.loc 1 75 0
 223 000a ADEB030D 		sub	sp, sp, r3
 224              	.LVL18:
  76:grbl/print.c  ****   uint8_t i = 0;
  77:grbl/print.c  **** 
  78:grbl/print.c  ****   for (; i < digits; i++) {
 225              		.loc 1 78 0
 226 000e D1B1     		cbz	r1, .L16
 227 0010 6C46     		mov	r4, sp
 228 0012 EE46     		mov	lr, sp
 229 0014 4E1E     		subs	r6, r1, #1
 230 0016 F5B2     		uxtb	r5, r6
 231 0018 0DEB050C 		add	ip, sp, r5
 232 001c 0DF1FF33 		add	r3, sp, #-1
 233              	.LVL19:
 234              	.L18:
  79:grbl/print.c  ****       buf[i] = n % 2 ;
 235              		.loc 1 79 0 discriminator 2
 236 0020 00F00102 		and	r2, r0, #1
 237 0024 03F8012F 		strb	r2, [r3, #1]!
 238              	.LVL20:
  78:grbl/print.c  ****       buf[i] = n % 2 ;
 239              		.loc 1 78 0 discriminator 2
 240 0028 6345     		cmp	r3, ip
  80:grbl/print.c  ****       n /= 2;
 241              		.loc 1 80 0 discriminator 2
 242 002a 4FEA5000 		lsr	r0, r0, #1
 243              	.LVL21:
  78:grbl/print.c  ****       buf[i] = n % 2 ;
 244              		.loc 1 78 0 discriminator 2
 245 002e F7D1     		bne	.L18
 246              	.LVL22:
 247 0030 751B     		subs	r5, r6, r5
 248 0032 7544     		add	r5, r5, lr
 249 0034 0C44     		add	r4, r4, r1
 250              	.LVL23:
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 7


 251              	.L19:
  81:grbl/print.c  ****   }
  82:grbl/print.c  **** 
  83:grbl/print.c  ****   for (; i > 0; i--)
  84:grbl/print.c  ****       serial_write('0' + buf[i - 1]);
 252              		.loc 1 84 0 discriminator 2
 253 0036 14F8010D 		ldrb	r0, [r4, #-1]!	@ zero_extendqisi2
 254              	.LVL24:
 255 003a 3030     		adds	r0, r0, #48
 256 003c C0B2     		uxtb	r0, r0
 257 003e FFF7FEFF 		bl	serial_write
 258              	.LVL25:
  83:grbl/print.c  ****       serial_write('0' + buf[i - 1]);
 259              		.loc 1 83 0 discriminator 2
 260 0042 A542     		cmp	r5, r4
 261 0044 F7D1     		bne	.L19
 262              	.LVL26:
 263              	.L16:
  85:grbl/print.c  **** }
 264              		.loc 1 85 0
 265 0046 BD46     		mov	sp, r7
 266              	.LCFI9:
 267              		.cfi_def_cfa_register 13
 268              	.LVL27:
 269              		@ sp needed
 270 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 271              		.cfi_endproc
 272              	.LFE705:
 274 004a 00BF     		.section	.text.print_uint32_base10,"ax",%progbits
 275              		.align	1
 276              		.p2align 2,,3
 277              		.global	print_uint32_base10
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu softvfp
 283              	print_uint32_base10:
 284              	.LFB706:
  86:grbl/print.c  **** 
  87:grbl/print.c  **** 
  88:grbl/print.c  **** void print_uint32_base10(uint32_t n)
  89:grbl/print.c  **** {
 285              		.loc 1 89 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 16
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              	.LVL28:
  90:grbl/print.c  ****   if (n == 0) {
 290              		.loc 1 90 0
 291 0000 30B3     		cbz	r0, .L38
  89:grbl/print.c  ****   if (n == 0) {
 292              		.loc 1 89 0
 293 0002 30B5     		push	{r4, r5, lr}
 294              	.LCFI10:
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
 297              		.cfi_offset 5, -8
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 8


 298              		.cfi_offset 14, -4
 299              	.LBB8:
 300              	.LBB9:
  91:grbl/print.c  ****     serial_write('0');
  92:grbl/print.c  ****     return;
  93:grbl/print.c  ****   }
  94:grbl/print.c  **** 
  95:grbl/print.c  ****   unsigned char buf[10];
  96:grbl/print.c  ****   uint8_t i = 0;
 301              		.loc 1 96 0
 302 0004 0024     		movs	r4, #0
 303              	.LBE9:
 304              	.LBE8:
  89:grbl/print.c  ****   if (n == 0) {
 305              		.loc 1 89 0
 306 0006 85B0     		sub	sp, sp, #20
 307              	.LCFI11:
 308              		.cfi_def_cfa_offset 32
 309              	.LBB11:
 310              	.LBB10:
  97:grbl/print.c  **** 
  98:grbl/print.c  ****   while (n > 0) {
  99:grbl/print.c  ****     buf[i++] = n % 10;
 311              		.loc 1 99 0
 312 0008 134D     		ldr	r5, .L39
 313 000a 00E0     		b	.L27
 314              	.LVL29:
 315              	.L31:
 316 000c 1C46     		mov	r4, r3
 317              	.LVL30:
 318              	.L27:
 319 000e A5FB0032 		umull	r3, r2, r5, r0
 320 0012 D208     		lsrs	r2, r2, #3
 321 0014 02EB8203 		add	r3, r2, r2, lsl #2
 322 0018 04A9     		add	r1, sp, #16
 323 001a A0EB4300 		sub	r0, r0, r3, lsl #1
 324              	.LVL31:
 325 001e 2144     		add	r1, r1, r4
 326 0020 631C     		adds	r3, r4, #1
 327 0022 01F80C0C 		strb	r0, [r1, #-12]
 328 0026 DBB2     		uxtb	r3, r3
 329              	.LVL32:
  98:grbl/print.c  ****     buf[i++] = n % 10;
 330              		.loc 1 98 0
 331 0028 1046     		mov	r0, r2
 332 002a 002A     		cmp	r2, #0
 333 002c EED1     		bne	.L31
 100:grbl/print.c  ****     n /= 10;
 101:grbl/print.c  ****   }
 102:grbl/print.c  **** 
 103:grbl/print.c  ****   for (; i > 0; i--)
 334              		.loc 1 103 0
 335 002e 6BB1     		cbz	r3, .L26
 336 0030 0DF10302 		add	r2, sp, #3
 337              	.LVL33:
 338 0034 D518     		adds	r5, r2, r3
 339 0036 01AA     		add	r2, sp, #4
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 9


 340 0038 2D1B     		subs	r5, r5, r4
 341 003a D418     		adds	r4, r2, r3
 342              	.LVL34:
 343              	.L29:
 104:grbl/print.c  ****     serial_write('0' + buf[i-1]);
 344              		.loc 1 104 0
 345 003c 14F8010D 		ldrb	r0, [r4, #-1]!	@ zero_extendqisi2
 346 0040 3030     		adds	r0, r0, #48
 347 0042 C0B2     		uxtb	r0, r0
 348 0044 FFF7FEFF 		bl	serial_write
 349              	.LVL35:
 103:grbl/print.c  ****     serial_write('0' + buf[i-1]);
 350              		.loc 1 103 0
 351 0048 A542     		cmp	r5, r4
 352 004a F7D1     		bne	.L29
 353              	.L26:
 354              	.LBE10:
 355              	.LBE11:
 105:grbl/print.c  **** }
 356              		.loc 1 105 0
 357 004c 05B0     		add	sp, sp, #20
 358              	.LCFI12:
 359              		.cfi_def_cfa_offset 12
 360              		@ sp needed
 361 004e 30BD     		pop	{r4, r5, pc}
 362              	.LVL36:
 363              	.L38:
 364              	.LCFI13:
 365              		.cfi_def_cfa_offset 0
 366              		.cfi_restore 4
 367              		.cfi_restore 5
 368              		.cfi_restore 14
  91:grbl/print.c  ****     return;
 369              		.loc 1 91 0
 370 0050 3020     		movs	r0, #48
 371              	.LVL37:
 372 0052 FFF7FEBF 		b	serial_write
 373              	.LVL38:
 374              	.L40:
 375 0056 00BF     		.align	2
 376              	.L39:
 377 0058 CDCCCCCC 		.word	-858993459
 378              		.cfi_endproc
 379              	.LFE706:
 381              		.section	.text.printInteger,"ax",%progbits
 382              		.align	1
 383              		.p2align 2,,3
 384              		.global	printInteger
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu softvfp
 390              	printInteger:
 391              	.LFB707:
 106:grbl/print.c  **** 
 107:grbl/print.c  **** 
 108:grbl/print.c  **** void printInteger(long n)
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 10


 109:grbl/print.c  **** {
 392              		.loc 1 109 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 16
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL39:
 397 0000 30B5     		push	{r4, r5, lr}
 398              	.LCFI14:
 399              		.cfi_def_cfa_offset 12
 400              		.cfi_offset 4, -12
 401              		.cfi_offset 5, -8
 402              		.cfi_offset 14, -4
 110:grbl/print.c  ****   if (n < 0) {
 403              		.loc 1 110 0
 404 0002 041E     		subs	r4, r0, #0
 109:grbl/print.c  ****   if (n < 0) {
 405              		.loc 1 109 0
 406 0004 85B0     		sub	sp, sp, #20
 407              	.LCFI15:
 408              		.cfi_def_cfa_offset 32
 409              		.loc 1 110 0
 410 0006 2CDB     		blt	.L62
 411              	.LVL40:
 412              	.LBB20:
 413              	.LBB21:
  90:grbl/print.c  ****     serial_write('0');
 414              		.loc 1 90 0
 415 0008 25D0     		beq	.L63
 416              	.LBE21:
 417              	.LBE20:
 111:grbl/print.c  ****     serial_write('-');
 112:grbl/print.c  ****     print_uint32_base10(-n);
 113:grbl/print.c  ****   } else {
 114:grbl/print.c  ****     print_uint32_base10(n);
 418              		.loc 1 114 0
 419 000a 2046     		mov	r0, r4
 420              	.LBB27:
 421              	.LBB24:
 422              	.LBB22:
 423              	.LBB23:
  99:grbl/print.c  ****     n /= 10;
 424              		.loc 1 99 0
 425 000c 294D     		ldr	r5, .L64
  96:grbl/print.c  **** 
 426              		.loc 1 96 0
 427 000e 0024     		movs	r4, #0
 428 0010 00E0     		b	.L48
 429              	.LVL41:
 430              	.L52:
  99:grbl/print.c  ****     n /= 10;
 431              		.loc 1 99 0
 432 0012 1C46     		mov	r4, r3
 433              	.LVL42:
 434              	.L48:
 435 0014 A5FB0032 		umull	r3, r2, r5, r0
 436 0018 D208     		lsrs	r2, r2, #3
 437 001a 02EB8203 		add	r3, r2, r2, lsl #2
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 11


 438 001e 04A9     		add	r1, sp, #16
 439 0020 A0EB4300 		sub	r0, r0, r3, lsl #1
 440              	.LVL43:
 441 0024 2144     		add	r1, r1, r4
 442 0026 631C     		adds	r3, r4, #1
 443 0028 01F80C0C 		strb	r0, [r1, #-12]
 444 002c DBB2     		uxtb	r3, r3
 445              	.LVL44:
  98:grbl/print.c  ****     buf[i++] = n % 10;
 446              		.loc 1 98 0
 447 002e 1046     		mov	r0, r2
 448 0030 002A     		cmp	r2, #0
 449 0032 EED1     		bne	.L52
 103:grbl/print.c  ****     serial_write('0' + buf[i-1]);
 450              		.loc 1 103 0
 451 0034 6BB1     		cbz	r3, .L41
 452 0036 0DF10302 		add	r2, sp, #3
 453              	.LVL45:
 454 003a D518     		adds	r5, r2, r3
 455 003c 01AA     		add	r2, sp, #4
 456 003e 2D1B     		subs	r5, r5, r4
 457 0040 D418     		adds	r4, r2, r3
 458              	.LVL46:
 459              	.L50:
 104:grbl/print.c  **** }
 460              		.loc 1 104 0
 461 0042 14F8010D 		ldrb	r0, [r4, #-1]!	@ zero_extendqisi2
 462 0046 3030     		adds	r0, r0, #48
 463 0048 C0B2     		uxtb	r0, r0
 464 004a FFF7FEFF 		bl	serial_write
 465              	.LVL47:
 103:grbl/print.c  ****     serial_write('0' + buf[i-1]);
 466              		.loc 1 103 0
 467 004e A542     		cmp	r5, r4
 468 0050 F7D1     		bne	.L50
 469              	.LVL48:
 470              	.L41:
 471              	.LBE23:
 472              	.LBE22:
 473              	.LBE24:
 474              	.LBE27:
 115:grbl/print.c  ****   }
 116:grbl/print.c  **** }
 475              		.loc 1 116 0
 476 0052 05B0     		add	sp, sp, #20
 477              	.LCFI16:
 478              		.cfi_remember_state
 479              		.cfi_def_cfa_offset 12
 480              		@ sp needed
 481 0054 30BD     		pop	{r4, r5, pc}
 482              	.LVL49:
 483              	.L63:
 484              	.LCFI17:
 485              		.cfi_restore_state
 486              	.LBB28:
 487              	.LBB25:
  91:grbl/print.c  ****     return;
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 12


 488              		.loc 1 91 0
 489 0056 3020     		movs	r0, #48
 490              	.LVL50:
 491              	.LBE25:
 492              	.LBE28:
 493              		.loc 1 116 0
 494 0058 05B0     		add	sp, sp, #20
 495              	.LCFI18:
 496              		.cfi_remember_state
 497              		.cfi_def_cfa_offset 12
 498              		@ sp needed
 499 005a BDE83040 		pop	{r4, r5, lr}
 500              	.LCFI19:
 501              		.cfi_restore 14
 502              		.cfi_restore 5
 503              		.cfi_restore 4
 504              		.cfi_def_cfa_offset 0
 505              	.LVL51:
 506              	.LBB29:
 507              	.LBB26:
  91:grbl/print.c  ****     return;
 508              		.loc 1 91 0
 509 005e FFF7FEBF 		b	serial_write
 510              	.LVL52:
 511              	.L62:
 512              	.LCFI20:
 513              		.cfi_restore_state
 514              	.LBE26:
 515              	.LBE29:
 111:grbl/print.c  ****     print_uint32_base10(-n);
 516              		.loc 1 111 0
 517 0062 2D20     		movs	r0, #45
 518              	.LVL53:
 519 0064 FFF7FEFF 		bl	serial_write
 520              	.LVL54:
 521              	.LBB30:
 522              	.LBB31:
 523              	.LBB32:
 524              	.LBB33:
  99:grbl/print.c  ****     n /= 10;
 525              		.loc 1 99 0
 526 0068 124D     		ldr	r5, .L64
 527              	.LBE33:
 528              	.LBE32:
 529              	.LBE31:
 530              	.LBE30:
 112:grbl/print.c  ****   } else {
 531              		.loc 1 112 0
 532 006a 6042     		negs	r0, r4
 533              	.LVL55:
 534              	.LBB37:
 535              	.LBB36:
 536              	.LBB35:
 537              	.LBB34:
  96:grbl/print.c  **** 
 538              		.loc 1 96 0
 539 006c 0024     		movs	r4, #0
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 13


 540              	.LVL56:
 541 006e 00E0     		b	.L43
 542              	.LVL57:
 543              	.L51:
  99:grbl/print.c  ****     n /= 10;
 544              		.loc 1 99 0
 545 0070 1C46     		mov	r4, r3
 546              	.LVL58:
 547              	.L43:
 548 0072 A5FB0032 		umull	r3, r2, r5, r0
 549 0076 D208     		lsrs	r2, r2, #3
 550 0078 02EB8203 		add	r3, r2, r2, lsl #2
 551 007c 04A9     		add	r1, sp, #16
 552 007e A0EB4300 		sub	r0, r0, r3, lsl #1
 553              	.LVL59:
 554 0082 2144     		add	r1, r1, r4
 555 0084 631C     		adds	r3, r4, #1
 556 0086 01F80C0C 		strb	r0, [r1, #-12]
 557 008a DBB2     		uxtb	r3, r3
 558              	.LVL60:
  98:grbl/print.c  ****     buf[i++] = n % 10;
 559              		.loc 1 98 0
 560 008c 1046     		mov	r0, r2
 561 008e 002A     		cmp	r2, #0
 562 0090 EED1     		bne	.L51
 103:grbl/print.c  ****     serial_write('0' + buf[i-1]);
 563              		.loc 1 103 0
 564 0092 002B     		cmp	r3, #0
 565 0094 DDD0     		beq	.L41
 566 0096 0DF10302 		add	r2, sp, #3
 567              	.LVL61:
 568 009a D518     		adds	r5, r2, r3
 569 009c 01AA     		add	r2, sp, #4
 570 009e 2D1B     		subs	r5, r5, r4
 571 00a0 D418     		adds	r4, r2, r3
 572              	.LVL62:
 573              	.L45:
 104:grbl/print.c  **** }
 574              		.loc 1 104 0
 575 00a2 14F8010D 		ldrb	r0, [r4, #-1]!	@ zero_extendqisi2
 576 00a6 3030     		adds	r0, r0, #48
 577 00a8 C0B2     		uxtb	r0, r0
 578 00aa FFF7FEFF 		bl	serial_write
 579              	.LVL63:
 103:grbl/print.c  ****     serial_write('0' + buf[i-1]);
 580              		.loc 1 103 0
 581 00ae A542     		cmp	r5, r4
 582 00b0 F7D1     		bne	.L45
 583 00b2 CEE7     		b	.L41
 584              	.L65:
 585              		.align	2
 586              	.L64:
 587 00b4 CDCCCCCC 		.word	-858993459
 588              	.LBE34:
 589              	.LBE35:
 590              	.LBE36:
 591              	.LBE37:
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 14


 592              		.cfi_endproc
 593              	.LFE707:
 595              		.global	__aeabi_fcmplt
 596              		.global	__aeabi_fmul
 597              		.global	__aeabi_fadd
 598              		.global	__aeabi_f2iz
 599              		.section	.text.printFloat,"ax",%progbits
 600              		.align	1
 601              		.p2align 2,,3
 602              		.global	printFloat
 603              		.syntax unified
 604              		.thumb
 605              		.thumb_func
 606              		.fpu softvfp
 608              	printFloat:
 609              	.LFB708:
 117:grbl/print.c  **** 
 118:grbl/print.c  **** 
 119:grbl/print.c  **** // Convert float to string by immediately converting to a long integer, which contains
 120:grbl/print.c  **** // more digits than a float. Number of decimal places, which are tracked by a counter,
 121:grbl/print.c  **** // may be set by the user. The integer is then efficiently converted to a string.
 122:grbl/print.c  **** // NOTE: AVR '%' and '/' integer operations are very efficient. Bitshifting speed-up
 123:grbl/print.c  **** // techniques are actually just slightly slower. Found this out the hard way.
 124:grbl/print.c  **** void printFloat(float n, uint8_t decimal_places)
 125:grbl/print.c  **** {
 610              		.loc 1 125 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 16
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              	.LVL64:
 615 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 616              	.LCFI21:
 617              		.cfi_def_cfa_offset 20
 618              		.cfi_offset 4, -20
 619              		.cfi_offset 5, -16
 620              		.cfi_offset 6, -12
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 0D46     		mov	r5, r1
 624 0004 85B0     		sub	sp, sp, #20
 625              	.LCFI22:
 626              		.cfi_def_cfa_offset 40
 126:grbl/print.c  ****   if (n < 0) {
 627              		.loc 1 126 0
 628 0006 0021     		movs	r1, #0
 629              	.LVL65:
 125:grbl/print.c  ****   if (n < 0) {
 630              		.loc 1 125 0
 631 0008 0646     		mov	r6, r0
 632              		.loc 1 126 0
 633 000a FFF7FEFF 		bl	__aeabi_fcmplt
 634              	.LVL66:
 635 000e 0028     		cmp	r0, #0
 636 0010 40F0C280 		bne	.L110
 637              	.LVL67:
 127:grbl/print.c  ****     serial_write('-');
 128:grbl/print.c  ****     n = -n;
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 15


 129:grbl/print.c  ****   }
 130:grbl/print.c  **** 
 131:grbl/print.c  ****   uint8_t decimals = decimal_places;
 132:grbl/print.c  ****   while (decimals >= 2) { // Quickly convert values expected to be E0 to E-4.
 638              		.loc 1 132 0
 639 0014 012D     		cmp	r5, #1
 640 0016 40F2C780 		bls	.L84
 641              	.L113:
 642 001a 2C46     		mov	r4, r5
 133:grbl/print.c  ****     n *= 100;
 643              		.loc 1 133 0
 644 001c 6D4F     		ldr	r7, .L115
 645              	.LVL68:
 646              	.L70:
 647 001e 3046     		mov	r0, r6
 648 0020 3946     		mov	r1, r7
 649 0022 FFF7FEFF 		bl	__aeabi_fmul
 650              	.LVL69:
 134:grbl/print.c  ****     decimals -= 2;
 651              		.loc 1 134 0
 652 0026 023C     		subs	r4, r4, #2
 653              	.LVL70:
 654 0028 E4B2     		uxtb	r4, r4
 132:grbl/print.c  ****     n *= 100;
 655              		.loc 1 132 0
 656 002a 012C     		cmp	r4, #1
 133:grbl/print.c  ****     n *= 100;
 657              		.loc 1 133 0
 658 002c 0646     		mov	r6, r0
 659              	.LVL71:
 132:grbl/print.c  ****     n *= 100;
 660              		.loc 1 132 0
 661 002e F6D8     		bhi	.L70
 662 0030 05F00103 		and	r3, r5, #1
 663              	.LVL72:
 664              	.L69:
 135:grbl/print.c  ****   }
 136:grbl/print.c  ****   if (decimals) { n *= 10; }
 665              		.loc 1 136 0
 666 0034 23B1     		cbz	r3, .L71
 667              		.loc 1 136 0 is_stmt 0 discriminator 1
 668 0036 3046     		mov	r0, r6
 669 0038 6749     		ldr	r1, .L115+4
 670 003a FFF7FEFF 		bl	__aeabi_fmul
 671              	.LVL73:
 672 003e 0646     		mov	r6, r0
 673              	.LVL74:
 674              	.L71:
 137:grbl/print.c  ****   n += 0.5; // Add rounding factor. Ensures carryover through entire value.
 675              		.loc 1 137 0 is_stmt 1
 676 0040 4FF07C51 		mov	r1, #1056964608
 677 0044 3046     		mov	r0, r6
 678 0046 FFF7FEFF 		bl	__aeabi_fadd
 679              	.LVL75:
 138:grbl/print.c  **** 
 139:grbl/print.c  ****   // Generate digits backwards and store in string.
 140:grbl/print.c  ****   unsigned char buf[13];
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 16


 141:grbl/print.c  ****   uint8_t i = 0;
 142:grbl/print.c  ****   uint32_t a = (long)n;
 680              		.loc 1 142 0
 681 004a FFF7FEFF 		bl	__aeabi_f2iz
 682              	.LVL76:
 143:grbl/print.c  ****   while(a > 0) {
 683              		.loc 1 143 0
 684 004e 0028     		cmp	r0, #0
 685 0050 00F0AC80 		beq	.L72
 141:grbl/print.c  ****   uint32_t a = (long)n;
 686              		.loc 1 141 0
 687 0054 0022     		movs	r2, #0
 144:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 688              		.loc 1 144 0
 689 0056 614E     		ldr	r6, .L115+8
 690              	.LVL77:
 691              	.L73:
 692 0058 A6FB0013 		umull	r1, r3, r6, r0
 693 005c DB08     		lsrs	r3, r3, #3
 694 005e 03EB8301 		add	r1, r3, r3, lsl #2
 695 0062 A0EB4100 		sub	r0, r0, r1, lsl #1
 696              	.LVL78:
 697 0066 541C     		adds	r4, r2, #1
 698 0068 04A9     		add	r1, sp, #16
 699 006a 3030     		adds	r0, r0, #48
 700 006c 0A44     		add	r2, r2, r1
 701              	.LVL79:
 702 006e E4B2     		uxtb	r4, r4
 703              	.LVL80:
 704 0070 02F8100C 		strb	r0, [r2, #-16]
 705 0074 2246     		mov	r2, r4
 143:grbl/print.c  ****   while(a > 0) {
 706              		.loc 1 143 0
 707 0076 1846     		mov	r0, r3
 708 0078 002B     		cmp	r3, #0
 709 007a EDD1     		bne	.L73
 145:grbl/print.c  ****     a /= 10;
 146:grbl/print.c  ****   }
 147:grbl/print.c  ****   while (i < decimal_places) {
 710              		.loc 1 147 0
 711 007c A542     		cmp	r5, r4
 712 007e 68D9     		bls	.L77
 713              	.LVL81:
 714              	.L75:
 148:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 715              		.loc 1 148 0
 716 0080 3021     		movs	r1, #48
 717 0082 631C     		adds	r3, r4, #1
 718 0084 DBB2     		uxtb	r3, r3
 719              	.LVL82:
 720 0086 04AA     		add	r2, sp, #16
 721 0088 2244     		add	r2, r2, r4
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 722              		.loc 1 147 0
 723 008a 9D42     		cmp	r5, r3
 724              		.loc 1 148 0
 725 008c 02F8101C 		strb	r1, [r2, #-16]
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 17


 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 726              		.loc 1 147 0
 727 0090 7ED9     		bls	.L98
 728              		.loc 1 148 0
 729 0092 A21C     		adds	r2, r4, #2
 730 0094 04A8     		add	r0, sp, #16
 731              	.LVL83:
 732 0096 D2B2     		uxtb	r2, r2
 733              	.LVL84:
 734 0098 0344     		add	r3, r3, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 735              		.loc 1 147 0
 736 009a 9542     		cmp	r5, r2
 737              		.loc 1 148 0
 738 009c 03F8101C 		strb	r1, [r3, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 739              		.loc 1 147 0
 740 00a0 72D9     		bls	.L97
 741              		.loc 1 148 0
 742 00a2 E31C     		adds	r3, r4, #3
 743 00a4 DBB2     		uxtb	r3, r3
 744              	.LVL85:
 745 00a6 0244     		add	r2, r2, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 746              		.loc 1 147 0
 747 00a8 9D42     		cmp	r5, r3
 748              		.loc 1 148 0
 749 00aa 02F8101C 		strb	r1, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 750              		.loc 1 147 0
 751 00ae 6FD9     		bls	.L98
 752              		.loc 1 148 0
 753 00b0 221D     		adds	r2, r4, #4
 754 00b2 D2B2     		uxtb	r2, r2
 755              	.LVL86:
 756 00b4 0344     		add	r3, r3, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 757              		.loc 1 147 0
 758 00b6 9542     		cmp	r5, r2
 759              		.loc 1 148 0
 760 00b8 03F8101C 		strb	r1, [r3, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 761              		.loc 1 147 0
 762 00bc 64D9     		bls	.L97
 763              		.loc 1 148 0
 764 00be 631D     		adds	r3, r4, #5
 765 00c0 DBB2     		uxtb	r3, r3
 766              	.LVL87:
 767 00c2 0244     		add	r2, r2, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 768              		.loc 1 147 0
 769 00c4 AB42     		cmp	r3, r5
 770              		.loc 1 148 0
 771 00c6 02F8101C 		strb	r1, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 772              		.loc 1 147 0
 773 00ca 61D2     		bcs	.L98
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 18


 774              		.loc 1 148 0
 775 00cc A21D     		adds	r2, r4, #6
 776 00ce D2B2     		uxtb	r2, r2
 777              	.LVL88:
 778 00d0 0344     		add	r3, r3, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 779              		.loc 1 147 0
 780 00d2 9542     		cmp	r5, r2
 781              		.loc 1 148 0
 782 00d4 03F8101C 		strb	r1, [r3, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 783              		.loc 1 147 0
 784 00d8 56D9     		bls	.L97
 785              		.loc 1 148 0
 786 00da E31D     		adds	r3, r4, #7
 787 00dc DBB2     		uxtb	r3, r3
 788              	.LVL89:
 789 00de 0244     		add	r2, r2, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 790              		.loc 1 147 0
 791 00e0 9D42     		cmp	r5, r3
 792              		.loc 1 148 0
 793 00e2 02F8101C 		strb	r1, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 794              		.loc 1 147 0
 795 00e6 53D9     		bls	.L98
 796              		.loc 1 148 0
 797 00e8 04F10802 		add	r2, r4, #8
 798 00ec D2B2     		uxtb	r2, r2
 799              	.LVL90:
 800 00ee 0344     		add	r3, r3, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 801              		.loc 1 147 0
 802 00f0 9542     		cmp	r5, r2
 803              		.loc 1 148 0
 804 00f2 03F8101C 		strb	r1, [r3, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 805              		.loc 1 147 0
 806 00f6 47D9     		bls	.L97
 807              		.loc 1 148 0
 808 00f8 04F10903 		add	r3, r4, #9
 809 00fc DBB2     		uxtb	r3, r3
 810              	.LVL91:
 811 00fe 0244     		add	r2, r2, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 812              		.loc 1 147 0
 813 0100 9D42     		cmp	r5, r3
 814              		.loc 1 148 0
 815 0102 02F8101C 		strb	r1, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 816              		.loc 1 147 0
 817 0106 43D9     		bls	.L98
 818              		.loc 1 148 0
 819 0108 04F10A02 		add	r2, r4, #10
 820 010c D2B2     		uxtb	r2, r2
 821              	.LVL92:
 822 010e 0344     		add	r3, r3, r0
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 19


 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 823              		.loc 1 147 0
 824 0110 9542     		cmp	r5, r2
 825              		.loc 1 148 0
 826 0112 03F8101C 		strb	r1, [r3, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 827              		.loc 1 147 0
 828 0116 37D9     		bls	.L97
 829              		.loc 1 148 0
 830 0118 04F10B03 		add	r3, r4, #11
 831 011c DBB2     		uxtb	r3, r3
 832              	.LVL93:
 833 011e 0244     		add	r2, r2, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 834              		.loc 1 147 0
 835 0120 9D42     		cmp	r5, r3
 836              		.loc 1 148 0
 837 0122 02F8101C 		strb	r1, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 838              		.loc 1 147 0
 839 0126 33D9     		bls	.L98
 840              		.loc 1 148 0
 841 0128 04F10C02 		add	r2, r4, #12
 842 012c D2B2     		uxtb	r2, r2
 843              	.LVL94:
 844 012e 0344     		add	r3, r3, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 845              		.loc 1 147 0
 846 0130 9542     		cmp	r5, r2
 847              		.loc 1 148 0
 848 0132 03F8101C 		strb	r1, [r3, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 849              		.loc 1 147 0
 850 0136 27D9     		bls	.L97
 851              		.loc 1 148 0
 852 0138 04F10D03 		add	r3, r4, #13
 853 013c DBB2     		uxtb	r3, r3
 854              	.LVL95:
 855 013e 0244     		add	r2, r2, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 856              		.loc 1 147 0
 857 0140 9D42     		cmp	r5, r3
 858              		.loc 1 148 0
 859 0142 02F8101C 		strb	r1, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 860              		.loc 1 147 0
 861 0146 23D9     		bls	.L98
 862              		.loc 1 148 0
 863 0148 0E34     		adds	r4, r4, #14
 864 014a 0344     		add	r3, r3, r0
 865              	.LVL96:
 866 014c E4B2     		uxtb	r4, r4
 867              	.LVL97:
 868 014e 03F8101C 		strb	r1, [r3, #-16]
 869              	.L77:
 149:grbl/print.c  ****   }
 150:grbl/print.c  ****   if (i == decimal_places) { // Fill in leading zero, if needed.
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 20


 870              		.loc 1 150 0
 871 0152 A542     		cmp	r5, r4
 872 0154 10D0     		beq	.L111
 873              	.LVL98:
 874              	.L79:
 151:grbl/print.c  ****     buf[i++] = '0';
 152:grbl/print.c  ****   }
 153:grbl/print.c  **** 
 154:grbl/print.c  ****   // Print the generated string.
 155:grbl/print.c  ****   for (; i > 0; i--) {
 875              		.loc 1 155 0 discriminator 1
 876 0156 6CB1     		cbz	r4, .L66
 877              	.LVL99:
 878              	.L76:
 879              		.loc 1 155 0 is_stmt 0
 880 0158 6B1E     		subs	r3, r5, #1
 881 015a 0DEB0406 		add	r6, sp, r4
 882 015e DFB2     		uxtb	r7, r3
 883              	.L81:
 884              	.LVL100:
 156:grbl/print.c  ****     if (i == decimal_places) { serial_write('.'); } // Insert decimal point in right place.
 885              		.loc 1 156 0 is_stmt 1
 886 0160 A542     		cmp	r5, r4
 887 0162 26D0     		beq	.L112
 157:grbl/print.c  ****     serial_write(buf[i-1]);
 888              		.loc 1 157 0
 889 0164 16F8010D 		ldrb	r0, [r6, #-1]!	@ zero_extendqisi2
 155:grbl/print.c  ****     if (i == decimal_places) { serial_write('.'); } // Insert decimal point in right place.
 890              		.loc 1 155 0
 891 0168 013C     		subs	r4, r4, #1
 892              	.LVL101:
 893              		.loc 1 157 0
 894 016a FFF7FEFF 		bl	serial_write
 895              	.LVL102:
 155:grbl/print.c  ****     if (i == decimal_places) { serial_write('.'); } // Insert decimal point in right place.
 896              		.loc 1 155 0
 897 016e 14F0FF04 		ands	r4, r4, #255
 898              	.LVL103:
 899 0172 F5D1     		bne	.L81
 900              	.L66:
 158:grbl/print.c  ****   }
 159:grbl/print.c  **** }
 901              		.loc 1 159 0
 902 0174 05B0     		add	sp, sp, #20
 903              	.LCFI23:
 904              		.cfi_remember_state
 905              		.cfi_def_cfa_offset 20
 906              		@ sp needed
 907 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 908              	.L111:
 909              	.LCFI24:
 910              		.cfi_restore_state
 151:grbl/print.c  ****   }
 911              		.loc 1 151 0
 912 0178 3022     		movs	r2, #48
 913 017a 04AB     		add	r3, sp, #16
 914 017c 6C1C     		adds	r4, r5, #1
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 21


 915 017e 2B44     		add	r3, r3, r5
 916 0180 03F8102C 		strb	r2, [r3, #-16]
 917 0184 E4B2     		uxtb	r4, r4
 918 0186 E6E7     		b	.L79
 919              	.LVL104:
 920              	.L97:
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 921              		.loc 1 147 0
 922 0188 1446     		mov	r4, r2
 150:grbl/print.c  ****     buf[i++] = '0';
 923              		.loc 1 150 0
 924 018a A542     		cmp	r5, r4
 925 018c E3D1     		bne	.L79
 926 018e F3E7     		b	.L111
 927              	.LVL105:
 928              	.L98:
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 929              		.loc 1 147 0
 930 0190 1C46     		mov	r4, r3
 150:grbl/print.c  ****     buf[i++] = '0';
 931              		.loc 1 150 0
 932 0192 A542     		cmp	r5, r4
 933 0194 DFD1     		bne	.L79
 934 0196 EFE7     		b	.L111
 935              	.LVL106:
 936              	.L110:
 127:grbl/print.c  ****     n = -n;
 937              		.loc 1 127 0
 938 0198 2D20     		movs	r0, #45
 939 019a FFF7FEFF 		bl	serial_write
 940              	.LVL107:
 132:grbl/print.c  ****     n *= 100;
 941              		.loc 1 132 0
 942 019e 012D     		cmp	r5, #1
 128:grbl/print.c  ****   }
 943              		.loc 1 128 0
 944 01a0 06F10046 		add	r6, r6, #-2147483648
 945              	.LVL108:
 132:grbl/print.c  ****     n *= 100;
 946              		.loc 1 132 0
 947 01a4 3FF639AF 		bhi	.L113
 948              	.L84:
 949 01a8 2B46     		mov	r3, r5
 950 01aa 43E7     		b	.L69
 951              	.LVL109:
 952              	.L72:
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 953              		.loc 1 147 0
 954 01ac 65B1     		cbz	r5, .L114
 141:grbl/print.c  ****   uint32_t a = (long)n;
 955              		.loc 1 141 0
 956 01ae 0446     		mov	r4, r0
 957 01b0 66E7     		b	.L75
 958              	.LVL110:
 959              	.L112:
 156:grbl/print.c  ****     serial_write(buf[i-1]);
 960              		.loc 1 156 0 discriminator 1
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 22


 961 01b2 2E20     		movs	r0, #46
 962 01b4 FFF7FEFF 		bl	serial_write
 963              	.LVL111:
 157:grbl/print.c  ****   }
 964              		.loc 1 157 0 discriminator 1
 965 01b8 16F8010D 		ldrb	r0, [r6, #-1]!	@ zero_extendqisi2
 966 01bc FFF7FEFF 		bl	serial_write
 967              	.LVL112:
 155:grbl/print.c  ****     if (i == decimal_places) { serial_write('.'); } // Insert decimal point in right place.
 968              		.loc 1 155 0 discriminator 1
 969 01c0 3C46     		mov	r4, r7
 970              	.LVL113:
 971 01c2 002F     		cmp	r7, #0
 972 01c4 CCD1     		bne	.L81
 973 01c6 D5E7     		b	.L66
 974              	.LVL114:
 975              	.L114:
 151:grbl/print.c  ****   }
 976              		.loc 1 151 0
 977 01c8 3023     		movs	r3, #48
 978 01ca 0124     		movs	r4, #1
 979 01cc 8DF80030 		strb	r3, [sp]
 980              	.LVL115:
 981 01d0 C2E7     		b	.L76
 982              	.L116:
 983 01d2 00BF     		.align	2
 984              	.L115:
 985 01d4 0000C842 		.word	1120403456
 986 01d8 00002041 		.word	1092616192
 987 01dc CDCCCCCC 		.word	-858993459
 988              		.cfi_endproc
 989              	.LFE708:
 991              		.global	__aeabi_f2d
 992              		.global	__aeabi_dmul
 993              		.global	__aeabi_d2f
 994              		.section	.text.printFloat_CoordValue,"ax",%progbits
 995              		.align	1
 996              		.p2align 2,,3
 997              		.global	printFloat_CoordValue
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1001              		.fpu softvfp
 1003              	printFloat_CoordValue:
 1004              	.LFB709:
 160:grbl/print.c  **** 
 161:grbl/print.c  **** 
 162:grbl/print.c  **** // Floating value printing handlers for special variables types used in Grbl and are defined
 163:grbl/print.c  **** // in the config.h.
 164:grbl/print.c  **** //  - CoordValue: Handles all position or coordinate values in inches or mm reporting.
 165:grbl/print.c  **** //  - RateValue: Handles feed rate and current velocity in inches or mm reporting.
 166:grbl/print.c  **** void printFloat_CoordValue(float n) {
 1005              		.loc 1 166 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 16
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009              	.LVL116:
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 23


 1010 0000 30B5     		push	{r4, r5, lr}
 1011              	.LCFI25:
 1012              		.cfi_def_cfa_offset 12
 1013              		.cfi_offset 4, -12
 1014              		.cfi_offset 5, -8
 1015              		.cfi_offset 14, -4
 167:grbl/print.c  ****   if (bit_istrue(settings.flags,BITFLAG_REPORT_INCHES)) {
 1016              		.loc 1 167 0
 1017 0002 7B4B     		ldr	r3, .L169+8
 166:grbl/print.c  ****   if (bit_istrue(settings.flags,BITFLAG_REPORT_INCHES)) {
 1018              		.loc 1 166 0
 1019 0004 85B0     		sub	sp, sp, #20
 1020              	.LCFI26:
 1021              		.cfi_def_cfa_offset 32
 1022              		.loc 1 167 0
 1023 0006 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 1024 000a DB07     		lsls	r3, r3, #31
 1025 000c 5AD4     		bmi	.L164
 1026              	.LBB42:
 1027              	.LBB43:
 126:grbl/print.c  ****     serial_write('-');
 1028              		.loc 1 126 0
 1029 000e 0021     		movs	r1, #0
 1030 0010 0446     		mov	r4, r0
 1031              	.LVL117:
 1032 0012 FFF7FEFF 		bl	__aeabi_fcmplt
 1033              	.LVL118:
 1034 0016 0028     		cmp	r0, #0
 1035 0018 40F0BD80 		bne	.L165
 1036              	.LVL119:
 1037              	.L131:
 133:grbl/print.c  ****     decimals -= 2;
 1038              		.loc 1 133 0
 1039 001c 7549     		ldr	r1, .L169+12
 1040 001e 2046     		mov	r0, r4
 1041 0020 FFF7FEFF 		bl	__aeabi_fmul
 1042              	.LVL120:
 136:grbl/print.c  ****   n += 0.5; // Add rounding factor. Ensures carryover through entire value.
 1043              		.loc 1 136 0
 1044 0024 7449     		ldr	r1, .L169+16
 1045 0026 FFF7FEFF 		bl	__aeabi_fmul
 1046              	.LVL121:
 137:grbl/print.c  **** 
 1047              		.loc 1 137 0
 1048 002a 4FF07C51 		mov	r1, #1056964608
 1049 002e FFF7FEFF 		bl	__aeabi_fadd
 1050              	.LVL122:
 142:grbl/print.c  ****   while(a > 0) {
 1051              		.loc 1 142 0
 1052 0032 FFF7FEFF 		bl	__aeabi_f2iz
 1053              	.LVL123:
 143:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 1054              		.loc 1 143 0
 1055 0036 0028     		cmp	r0, #0
 1056 0038 00F0B380 		beq	.L133
 141:grbl/print.c  ****   uint32_t a = (long)n;
 1057              		.loc 1 141 0
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 24


 1058 003c 0024     		movs	r4, #0
 144:grbl/print.c  ****     a /= 10;
 1059              		.loc 1 144 0
 1060 003e 6F4D     		ldr	r5, .L169+20
 1061 0040 00E0     		b	.L134
 1062              	.LVL124:
 1063              	.L145:
 1064 0042 1C46     		mov	r4, r3
 1065              	.L134:
 1066              	.LVL125:
 1067 0044 A5FB0032 		umull	r3, r2, r5, r0
 1068 0048 D208     		lsrs	r2, r2, #3
 1069 004a 02EB8203 		add	r3, r2, r2, lsl #2
 1070 004e A0EB4300 		sub	r0, r0, r3, lsl #1
 1071              	.LVL126:
 1072 0052 04A9     		add	r1, sp, #16
 1073 0054 3030     		adds	r0, r0, #48
 1074 0056 631C     		adds	r3, r4, #1
 1075 0058 2144     		add	r1, r1, r4
 1076 005a 01F8100C 		strb	r0, [r1, #-16]
 1077 005e DBB2     		uxtb	r3, r3
 1078              	.LVL127:
 143:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 1079              		.loc 1 143 0
 1080 0060 1046     		mov	r0, r2
 1081 0062 002A     		cmp	r2, #0
 1082 0064 EDD1     		bne	.L145
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1083              		.loc 1 147 0
 1084 0066 022B     		cmp	r3, #2
 1085 0068 00F2B380 		bhi	.L135
 148:grbl/print.c  ****   }
 1086              		.loc 1 148 0
 1087 006c 3021     		movs	r1, #48
 1088 006e A21C     		adds	r2, r4, #2
 1089              	.LVL128:
 1090 0070 04A8     		add	r0, sp, #16
 1091              	.LVL129:
 1092 0072 D2B2     		uxtb	r2, r2
 1093              	.LVL130:
 1094 0074 0344     		add	r3, r3, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1095              		.loc 1 147 0
 1096 0076 032A     		cmp	r2, #3
 148:grbl/print.c  ****   }
 1097              		.loc 1 148 0
 1098 0078 03F8101C 		strb	r1, [r3, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1099              		.loc 1 147 0
 1100 007c 07D0     		beq	.L137
 1101              	.LVL131:
 148:grbl/print.c  ****   }
 1102              		.loc 1 148 0
 1103 007e 0244     		add	r2, r2, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1104              		.loc 1 147 0
 1105 0080 FF2C     		cmp	r4, #255
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 25


 148:grbl/print.c  ****   }
 1106              		.loc 1 148 0
 1107 0082 02F8101C 		strb	r1, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1108              		.loc 1 147 0
 1109 0086 02D1     		bne	.L137
 1110              	.LVL132:
 1111              	.L143:
 148:grbl/print.c  ****   }
 1112              		.loc 1 148 0
 1113 0088 3023     		movs	r3, #48
 1114 008a 8DF80230 		strb	r3, [sp, #2]
 1115              	.LVL133:
 1116              	.L137:
 151:grbl/print.c  ****   }
 1117              		.loc 1 151 0
 1118 008e 3025     		movs	r5, #48
 1119 0090 0423     		movs	r3, #4
 1120 0092 8DF80350 		strb	r5, [sp, #3]
 1121 0096 0AE0     		b	.L139
 1122              	.LVL134:
 1123              	.L166:
 156:grbl/print.c  ****     serial_write(buf[i-1]);
 1124              		.loc 1 156 0
 1125 0098 2E20     		movs	r0, #46
 1126 009a FFF7FEFF 		bl	serial_write
 1127              	.LVL135:
 157:grbl/print.c  ****   }
 1128              		.loc 1 157 0
 1129 009e 2846     		mov	r0, r5
 1130 00a0 FFF7FEFF 		bl	serial_write
 1131              	.LVL136:
 1132              	.L141:
 1133 00a4 04AA     		add	r2, sp, #16
 151:grbl/print.c  ****   }
 1134              		.loc 1 151 0
 1135 00a6 2346     		mov	r3, r4
 1136 00a8 1444     		add	r4, r4, r2
 1137 00aa 14F8115C 		ldrb	r5, [r4, #-17]	@ zero_extendqisi2
 1138              	.L139:
 1139 00ae 5C1E     		subs	r4, r3, #1
 156:grbl/print.c  ****     serial_write(buf[i-1]);
 1140              		.loc 1 156 0
 1141 00b0 032B     		cmp	r3, #3
 1142 00b2 E4B2     		uxtb	r4, r4
 1143 00b4 F0D0     		beq	.L166
 157:grbl/print.c  ****   }
 1144              		.loc 1 157 0
 1145 00b6 2846     		mov	r0, r5
 1146 00b8 FFF7FEFF 		bl	serial_write
 1147              	.LVL137:
 155:grbl/print.c  ****     if (i == decimal_places) { serial_write('.'); } // Insert decimal point in right place.
 1148              		.loc 1 155 0
 1149 00bc 002C     		cmp	r4, #0
 1150 00be F1D1     		bne	.L141
 1151              	.LBE43:
 1152              	.LBE42:
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 26


 168:grbl/print.c  ****     printFloat(n*INCH_PER_MM,N_DECIMAL_COORDVALUE_INCH);
 169:grbl/print.c  ****   } else {
 170:grbl/print.c  ****     printFloat(n,N_DECIMAL_COORDVALUE_MM);
 171:grbl/print.c  ****   }
 172:grbl/print.c  **** }
 1153              		.loc 1 172 0
 1154 00c0 05B0     		add	sp, sp, #20
 1155              	.LCFI27:
 1156              		.cfi_remember_state
 1157              		.cfi_def_cfa_offset 12
 1158              		@ sp needed
 1159 00c2 30BD     		pop	{r4, r5, pc}
 1160              	.LVL138:
 1161              	.L164:
 1162              	.LCFI28:
 1163              		.cfi_restore_state
 168:grbl/print.c  ****     printFloat(n*INCH_PER_MM,N_DECIMAL_COORDVALUE_INCH);
 1164              		.loc 1 168 0
 1165 00c4 FFF7FEFF 		bl	__aeabi_f2d
 1166              	.LVL139:
 1167 00c8 47A3     		adr	r3, .L169
 1168 00ca D3E90023 		ldrd	r2, [r3]
 1169 00ce FFF7FEFF 		bl	__aeabi_dmul
 1170              	.LVL140:
 1171 00d2 FFF7FEFF 		bl	__aeabi_d2f
 1172              	.LVL141:
 1173              	.LBB46:
 1174              	.LBB47:
 126:grbl/print.c  ****     serial_write('-');
 1175              		.loc 1 126 0
 1176 00d6 0021     		movs	r1, #0
 1177              	.LBE47:
 1178              	.LBE46:
 168:grbl/print.c  ****     printFloat(n*INCH_PER_MM,N_DECIMAL_COORDVALUE_INCH);
 1179              		.loc 1 168 0
 1180 00d8 0446     		mov	r4, r0
 1181              	.LVL142:
 1182              	.LBB50:
 1183              	.LBB48:
 126:grbl/print.c  ****     serial_write('-');
 1184              		.loc 1 126 0
 1185 00da FFF7FEFF 		bl	__aeabi_fcmplt
 1186              	.LVL143:
 1187 00de 0028     		cmp	r0, #0
 1188 00e0 64D1     		bne	.L167
 1189              	.LVL144:
 1190              	.L119:
 133:grbl/print.c  ****     decimals -= 2;
 1191              		.loc 1 133 0
 1192 00e2 4449     		ldr	r1, .L169+12
 1193 00e4 2046     		mov	r0, r4
 1194 00e6 FFF7FEFF 		bl	__aeabi_fmul
 1195              	.LVL145:
 1196 00ea 4249     		ldr	r1, .L169+12
 1197 00ec FFF7FEFF 		bl	__aeabi_fmul
 1198              	.LVL146:
 137:grbl/print.c  **** 
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 27


 1199              		.loc 1 137 0
 1200 00f0 4FF07C51 		mov	r1, #1056964608
 1201 00f4 FFF7FEFF 		bl	__aeabi_fadd
 1202              	.LVL147:
 142:grbl/print.c  ****   while(a > 0) {
 1203              		.loc 1 142 0
 1204 00f8 FFF7FEFF 		bl	__aeabi_f2iz
 1205              	.LVL148:
 143:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 1206              		.loc 1 143 0
 1207 00fc 0028     		cmp	r0, #0
 1208 00fe 5BD0     		beq	.L121
 141:grbl/print.c  ****   uint32_t a = (long)n;
 1209              		.loc 1 141 0
 1210 0100 0024     		movs	r4, #0
 144:grbl/print.c  ****     a /= 10;
 1211              		.loc 1 144 0
 1212 0102 3E4D     		ldr	r5, .L169+20
 1213 0104 00E0     		b	.L122
 1214              	.LVL149:
 1215              	.L144:
 1216 0106 1C46     		mov	r4, r3
 1217              	.L122:
 1218              	.LVL150:
 1219 0108 A5FB0032 		umull	r3, r2, r5, r0
 1220 010c D208     		lsrs	r2, r2, #3
 1221 010e 02EB8203 		add	r3, r2, r2, lsl #2
 1222 0112 A0EB4300 		sub	r0, r0, r3, lsl #1
 1223              	.LVL151:
 1224 0116 04A9     		add	r1, sp, #16
 1225 0118 3030     		adds	r0, r0, #48
 1226 011a 631C     		adds	r3, r4, #1
 1227 011c 2144     		add	r1, r1, r4
 1228 011e 01F8100C 		strb	r0, [r1, #-16]
 1229 0122 DBB2     		uxtb	r3, r3
 1230              	.LVL152:
 143:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 1231              		.loc 1 143 0
 1232 0124 1046     		mov	r0, r2
 1233 0126 002A     		cmp	r2, #0
 1234 0128 EDD1     		bne	.L144
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1235              		.loc 1 147 0
 1236 012a 032B     		cmp	r3, #3
 1237 012c 4AD8     		bhi	.L123
 148:grbl/print.c  ****   }
 1238              		.loc 1 148 0
 1239 012e 3021     		movs	r1, #48
 1240 0130 A21C     		adds	r2, r4, #2
 1241              	.LVL153:
 1242 0132 04A8     		add	r0, sp, #16
 1243              	.LVL154:
 1244 0134 D2B2     		uxtb	r2, r2
 1245              	.LVL155:
 1246 0136 0344     		add	r3, r3, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1247              		.loc 1 147 0
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 28


 1248 0138 042A     		cmp	r2, #4
 148:grbl/print.c  ****   }
 1249              		.loc 1 148 0
 1250 013a 03F8101C 		strb	r1, [r3, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1251              		.loc 1 147 0
 1252 013e 0FD0     		beq	.L125
 148:grbl/print.c  ****   }
 1253              		.loc 1 148 0
 1254 0140 0334     		adds	r4, r4, #3
 1255 0142 E4B2     		uxtb	r4, r4
 1256              	.LVL156:
 1257 0144 0244     		add	r2, r2, r0
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1258              		.loc 1 147 0
 1259 0146 042C     		cmp	r4, #4
 148:grbl/print.c  ****   }
 1260              		.loc 1 148 0
 1261 0148 02F8101C 		strb	r1, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1262              		.loc 1 147 0
 1263 014c 08D0     		beq	.L125
 1264              	.LVL157:
 1265              	.L142:
 148:grbl/print.c  ****   }
 1266              		.loc 1 148 0
 1267 014e 3023     		movs	r3, #48
 1268 0150 04AA     		add	r2, sp, #16
 1269 0152 2244     		add	r2, r2, r4
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1270              		.loc 1 147 0
 1271 0154 022C     		cmp	r4, #2
 148:grbl/print.c  ****   }
 1272              		.loc 1 148 0
 1273 0156 02F8103C 		strb	r3, [r2, #-16]
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1274              		.loc 1 147 0
 1275 015a 01D1     		bne	.L125
 1276              	.LVL158:
 148:grbl/print.c  ****   }
 1277              		.loc 1 148 0
 1278 015c 8DF80330 		strb	r3, [sp, #3]
 1279              	.LVL159:
 1280              	.L125:
 151:grbl/print.c  ****   }
 1281              		.loc 1 151 0
 1282 0160 3025     		movs	r5, #48
 1283 0162 0523     		movs	r3, #5
 1284 0164 8DF80450 		strb	r5, [sp, #4]
 1285 0168 0AE0     		b	.L127
 1286              	.LVL160:
 1287              	.L168:
 156:grbl/print.c  ****     serial_write(buf[i-1]);
 1288              		.loc 1 156 0
 1289 016a 2E20     		movs	r0, #46
 1290 016c FFF7FEFF 		bl	serial_write
 1291              	.LVL161:
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 29


 157:grbl/print.c  ****   }
 1292              		.loc 1 157 0
 1293 0170 2846     		mov	r0, r5
 1294 0172 FFF7FEFF 		bl	serial_write
 1295              	.LVL162:
 1296              	.L129:
 1297 0176 04AA     		add	r2, sp, #16
 151:grbl/print.c  ****   }
 1298              		.loc 1 151 0
 1299 0178 2346     		mov	r3, r4
 1300 017a 1444     		add	r4, r4, r2
 1301 017c 14F8115C 		ldrb	r5, [r4, #-17]	@ zero_extendqisi2
 1302              	.L127:
 1303 0180 5C1E     		subs	r4, r3, #1
 156:grbl/print.c  ****     serial_write(buf[i-1]);
 1304              		.loc 1 156 0
 1305 0182 042B     		cmp	r3, #4
 1306 0184 E4B2     		uxtb	r4, r4
 1307 0186 F0D0     		beq	.L168
 157:grbl/print.c  ****   }
 1308              		.loc 1 157 0
 1309 0188 2846     		mov	r0, r5
 1310 018a FFF7FEFF 		bl	serial_write
 1311              	.LVL163:
 155:grbl/print.c  ****     if (i == decimal_places) { serial_write('.'); } // Insert decimal point in right place.
 1312              		.loc 1 155 0
 1313 018e 002C     		cmp	r4, #0
 1314 0190 F1D1     		bne	.L129
 1315              	.LBE48:
 1316              	.LBE50:
 1317              		.loc 1 172 0
 1318 0192 05B0     		add	sp, sp, #20
 1319              	.LCFI29:
 1320              		.cfi_remember_state
 1321              		.cfi_def_cfa_offset 12
 1322              		@ sp needed
 1323 0194 30BD     		pop	{r4, r5, pc}
 1324              	.LVL164:
 1325              	.L165:
 1326              	.LCFI30:
 1327              		.cfi_restore_state
 1328              	.LBB51:
 1329              	.LBB44:
 127:grbl/print.c  ****     n = -n;
 1330              		.loc 1 127 0
 1331 0196 2D20     		movs	r0, #45
 1332 0198 FFF7FEFF 		bl	serial_write
 1333              	.LVL165:
 128:grbl/print.c  ****   }
 1334              		.loc 1 128 0
 1335 019c 04F10044 		add	r4, r4, #-2147483648
 1336              	.LVL166:
 1337 01a0 3CE7     		b	.L131
 1338              	.LVL167:
 1339              	.L133:
 148:grbl/print.c  ****   }
 1340              		.loc 1 148 0
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 30


 1341 01a2 43F23003 		movw	r3, #12336
 1342 01a6 ADF80030 		strh	r3, [sp]	@ movhi
 1343 01aa 6DE7     		b	.L143
 1344              	.LVL168:
 1345              	.L167:
 1346              	.LBE44:
 1347              	.LBE51:
 1348              	.LBB52:
 1349              	.LBB49:
 127:grbl/print.c  ****     n = -n;
 1350              		.loc 1 127 0
 1351 01ac 2D20     		movs	r0, #45
 1352 01ae FFF7FEFF 		bl	serial_write
 1353              	.LVL169:
 128:grbl/print.c  ****   }
 1354              		.loc 1 128 0
 1355 01b2 04F10044 		add	r4, r4, #-2147483648
 1356              	.LVL170:
 1357 01b6 94E7     		b	.L119
 1358              	.LVL171:
 1359              	.L121:
 148:grbl/print.c  ****   }
 1360              		.loc 1 148 0
 1361 01b8 43F23003 		movw	r3, #12336
 1362 01bc 0224     		movs	r4, #2
 1363 01be ADF80030 		strh	r3, [sp]	@ movhi
 1364 01c2 C4E7     		b	.L142
 1365              	.LVL172:
 1366              	.L123:
 150:grbl/print.c  ****     buf[i++] = '0';
 1367              		.loc 1 150 0
 1368 01c4 042B     		cmp	r3, #4
 1369 01c6 CBD0     		beq	.L125
 1370 01c8 04AA     		add	r2, sp, #16
 1371 01ca 1A44     		add	r2, r2, r3
 1372 01cc 12F8115C 		ldrb	r5, [r2, #-17]	@ zero_extendqisi2
 1373 01d0 D6E7     		b	.L127
 1374              	.LVL173:
 1375              	.L135:
 1376              	.LBE49:
 1377              	.LBE52:
 1378              	.LBB53:
 1379              	.LBB45:
 1380 01d2 032B     		cmp	r3, #3
 1381 01d4 3FF45BAF 		beq	.L137
 1382 01d8 04AA     		add	r2, sp, #16
 1383 01da 1A44     		add	r2, r2, r3
 1384 01dc 12F8115C 		ldrb	r5, [r2, #-17]	@ zero_extendqisi2
 1385 01e0 65E7     		b	.L139
 1386              	.L170:
 1387 01e2 00BFAFF3 		.align	3
 1387      0080
 1388              	.L169:
 1389 01e8 6568E157 		.word	1474390117
 1390 01ec 5128A43F 		.word	1067722833
 1391 01f0 00000000 		.word	settings
 1392 01f4 0000C842 		.word	1120403456
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 31


 1393 01f8 00002041 		.word	1092616192
 1394 01fc CDCCCCCC 		.word	-858993459
 1395              	.LBE45:
 1396              	.LBE53:
 1397              		.cfi_endproc
 1398              	.LFE709:
 1400              		.section	.text.printFloat_RateValue,"ax",%progbits
 1401              		.align	1
 1402              		.p2align 2,,3
 1403              		.global	printFloat_RateValue
 1404              		.syntax unified
 1405              		.thumb
 1406              		.thumb_func
 1407              		.fpu softvfp
 1409              	printFloat_RateValue:
 1410              	.LFB710:
 173:grbl/print.c  **** 
 174:grbl/print.c  **** void printFloat_RateValue(float n) {
 1411              		.loc 1 174 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 16
 1414              		@ frame_needed = 0, uses_anonymous_args = 0
 1415              	.LVL174:
 1416 0000 70B5     		push	{r4, r5, r6, lr}
 1417              	.LCFI31:
 1418              		.cfi_def_cfa_offset 16
 1419              		.cfi_offset 4, -16
 1420              		.cfi_offset 5, -12
 1421              		.cfi_offset 6, -8
 1422              		.cfi_offset 14, -4
 175:grbl/print.c  ****   if (bit_istrue(settings.flags,BITFLAG_REPORT_INCHES)) {
 1423              		.loc 1 175 0
 1424 0002 514B     		ldr	r3, .L209+8
 174:grbl/print.c  ****   if (bit_istrue(settings.flags,BITFLAG_REPORT_INCHES)) {
 1425              		.loc 1 174 0
 1426 0004 84B0     		sub	sp, sp, #16
 1427              	.LCFI32:
 1428              		.cfi_def_cfa_offset 32
 1429              		.loc 1 175 0
 1430 0006 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 1431 000a DB07     		lsls	r3, r3, #31
 1432 000c 33D4     		bmi	.L204
 1433              	.LBB58:
 1434              	.LBB59:
 126:grbl/print.c  ****     serial_write('-');
 1435              		.loc 1 126 0
 1436 000e 0021     		movs	r1, #0
 1437 0010 0446     		mov	r4, r0
 1438              	.LVL175:
 1439 0012 FFF7FEFF 		bl	__aeabi_fcmplt
 1440              	.LVL176:
 1441 0016 0028     		cmp	r0, #0
 1442 0018 7AD1     		bne	.L205
 1443              	.LVL177:
 1444              	.L181:
 137:grbl/print.c  **** 
 1445              		.loc 1 137 0
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 32


 1446 001a 4FF07C51 		mov	r1, #1056964608
 1447 001e 2046     		mov	r0, r4
 1448 0020 FFF7FEFF 		bl	__aeabi_fadd
 1449              	.LVL178:
 142:grbl/print.c  ****   while(a > 0) {
 1450              		.loc 1 142 0
 1451 0024 FFF7FEFF 		bl	__aeabi_f2iz
 1452              	.LVL179:
 143:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 1453              		.loc 1 143 0
 1454 0028 0028     		cmp	r0, #0
 1455 002a 77D0     		beq	.L184
 141:grbl/print.c  ****   uint32_t a = (long)n;
 1456              		.loc 1 141 0
 1457 002c 0024     		movs	r4, #0
 1458              	.LVL180:
 144:grbl/print.c  ****     a /= 10;
 1459              		.loc 1 144 0
 1460 002e 474D     		ldr	r5, .L209+12
 1461 0030 00E0     		b	.L183
 1462              	.LVL181:
 1463              	.L188:
 1464 0032 1C46     		mov	r4, r3
 1465              	.L183:
 1466              	.LVL182:
 1467 0034 A5FB0032 		umull	r3, r2, r5, r0
 1468 0038 D208     		lsrs	r2, r2, #3
 1469 003a 02EB8203 		add	r3, r2, r2, lsl #2
 1470 003e A0EB4300 		sub	r0, r0, r3, lsl #1
 1471              	.LVL183:
 1472 0042 04A9     		add	r1, sp, #16
 1473 0044 3030     		adds	r0, r0, #48
 1474 0046 631C     		adds	r3, r4, #1
 1475 0048 2144     		add	r1, r1, r4
 1476 004a 01F8100C 		strb	r0, [r1, #-16]
 1477 004e DBB2     		uxtb	r3, r3
 1478              	.LVL184:
 143:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 1479              		.loc 1 143 0
 1480 0050 1046     		mov	r0, r2
 1481 0052 002A     		cmp	r2, #0
 1482 0054 EDD1     		bne	.L188
 150:grbl/print.c  ****     buf[i++] = '0';
 1483              		.loc 1 150 0
 1484 0056 002B     		cmp	r3, #0
 1485 0058 60D0     		beq	.L184
 1486 005a 0DF1FF32 		add	r2, sp, #-1
 1487              	.LVL185:
 1488 005e D518     		adds	r5, r2, r3
 1489 0060 2D1B     		subs	r5, r5, r4
 1490 0062 0DEB0304 		add	r4, sp, r3
 1491              	.LVL186:
 1492              	.L185:
 157:grbl/print.c  ****   }
 1493              		.loc 1 157 0
 1494 0066 14F8010D 		ldrb	r0, [r4, #-1]!	@ zero_extendqisi2
 1495 006a FFF7FEFF 		bl	serial_write
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 33


 1496              	.LVL187:
 155:grbl/print.c  ****     if (i == decimal_places) { serial_write('.'); } // Insert decimal point in right place.
 1497              		.loc 1 155 0
 1498 006e A542     		cmp	r5, r4
 1499 0070 F9D1     		bne	.L185
 1500              	.LBE59:
 1501              	.LBE58:
 176:grbl/print.c  ****     printFloat(n*INCH_PER_MM,N_DECIMAL_RATEVALUE_INCH);
 177:grbl/print.c  ****   } else {
 178:grbl/print.c  ****     printFloat(n,N_DECIMAL_RATEVALUE_MM);
 179:grbl/print.c  ****   }
 180:grbl/print.c  **** }
 1502              		.loc 1 180 0
 1503 0072 04B0     		add	sp, sp, #16
 1504              	.LCFI33:
 1505              		.cfi_remember_state
 1506              		.cfi_def_cfa_offset 16
 1507              		@ sp needed
 1508 0074 70BD     		pop	{r4, r5, r6, pc}
 1509              	.LVL188:
 1510              	.L204:
 1511              	.LCFI34:
 1512              		.cfi_restore_state
 176:grbl/print.c  ****     printFloat(n*INCH_PER_MM,N_DECIMAL_RATEVALUE_INCH);
 1513              		.loc 1 176 0
 1514 0076 FFF7FEFF 		bl	__aeabi_f2d
 1515              	.LVL189:
 1516 007a 31A3     		adr	r3, .L209
 1517 007c D3E90023 		ldrd	r2, [r3]
 1518 0080 FFF7FEFF 		bl	__aeabi_dmul
 1519              	.LVL190:
 1520 0084 FFF7FEFF 		bl	__aeabi_d2f
 1521              	.LVL191:
 1522              	.LBB62:
 1523              	.LBB63:
 126:grbl/print.c  ****     serial_write('-');
 1524              		.loc 1 126 0
 1525 0088 0021     		movs	r1, #0
 1526              	.LBE63:
 1527              	.LBE62:
 176:grbl/print.c  ****     printFloat(n*INCH_PER_MM,N_DECIMAL_RATEVALUE_INCH);
 1528              		.loc 1 176 0
 1529 008a 0446     		mov	r4, r0
 1530              	.LVL192:
 1531              	.LBB66:
 1532              	.LBB64:
 126:grbl/print.c  ****     serial_write('-');
 1533              		.loc 1 126 0
 1534 008c FFF7FEFF 		bl	__aeabi_fcmplt
 1535              	.LVL193:
 1536 0090 0028     		cmp	r0, #0
 1537 0092 49D1     		bne	.L206
 1538              	.LVL194:
 1539              	.L173:
 136:grbl/print.c  ****   n += 0.5; // Add rounding factor. Ensures carryover through entire value.
 1540              		.loc 1 136 0
 1541 0094 2E49     		ldr	r1, .L209+16
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 34


 1542 0096 2046     		mov	r0, r4
 1543 0098 FFF7FEFF 		bl	__aeabi_fmul
 1544              	.LVL195:
 137:grbl/print.c  **** 
 1545              		.loc 1 137 0
 1546 009c 4FF07C51 		mov	r1, #1056964608
 1547 00a0 FFF7FEFF 		bl	__aeabi_fadd
 1548              	.LVL196:
 142:grbl/print.c  ****   while(a > 0) {
 1549              		.loc 1 142 0
 1550 00a4 FFF7FEFF 		bl	__aeabi_f2iz
 1551              	.LVL197:
 143:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 1552              		.loc 1 143 0
 1553 00a8 A0B1     		cbz	r0, .L177
 141:grbl/print.c  ****   uint32_t a = (long)n;
 1554              		.loc 1 141 0
 1555 00aa 0021     		movs	r1, #0
 144:grbl/print.c  ****     a /= 10;
 1556              		.loc 1 144 0
 1557 00ac 274C     		ldr	r4, .L209+12
 1558              	.LVL198:
 1559              	.L175:
 1560 00ae A4FB0032 		umull	r3, r2, r4, r0
 1561 00b2 D208     		lsrs	r2, r2, #3
 1562 00b4 02EB8203 		add	r3, r2, r2, lsl #2
 1563 00b8 A0EB4300 		sub	r0, r0, r3, lsl #1
 1564              	.LVL199:
 1565 00bc 04AD     		add	r5, sp, #16
 1566 00be 4B1C     		adds	r3, r1, #1
 1567 00c0 3030     		adds	r0, r0, #48
 1568 00c2 2944     		add	r1, r1, r5
 1569              	.LVL200:
 1570 00c4 DBB2     		uxtb	r3, r3
 1571              	.LVL201:
 1572 00c6 01F8100C 		strb	r0, [r1, #-16]
 1573 00ca 1946     		mov	r1, r3
 143:grbl/print.c  ****     buf[i++] = (a % 10) + '0'; // Get digit
 1574              		.loc 1 143 0
 1575 00cc 1046     		mov	r0, r2
 1576 00ce 002A     		cmp	r2, #0
 1577 00d0 EDD1     		bne	.L175
 147:grbl/print.c  ****      buf[i++] = '0'; // Fill in zeros to decimal point for (n < 1)
 1578              		.loc 1 147 0
 1579 00d2 7BBB     		cbnz	r3, .L207
 1580              	.LVL202:
 1581              	.L177:
 148:grbl/print.c  ****   }
 1582              		.loc 1 148 0
 1583 00d4 3023     		movs	r3, #48
 1584 00d6 8DF80030 		strb	r3, [sp]
 1585              	.LVL203:
 1586              	.L176:
 151:grbl/print.c  ****   }
 1587              		.loc 1 151 0
 1588 00da 3022     		movs	r2, #48
 1589 00dc 0223     		movs	r3, #2
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 35


 1590 00de 1646     		mov	r6, r2
 1591 00e0 8DF80120 		strb	r2, [sp, #1]
 1592              	.LVL204:
 1593              	.L178:
 1594 00e4 5C1E     		subs	r4, r3, #1
 1595 00e6 E5B2     		uxtb	r5, r4
 1596 00e8 6D44     		add	r5, r5, sp
 1597 00ea 00E0     		b	.L179
 1598              	.LVL205:
 1599              	.L208:
 1600 00ec 5C1E     		subs	r4, r3, #1
 1601              	.LVL206:
 1602              	.L179:
 157:grbl/print.c  ****   }
 1603              		.loc 1 157 0
 1604 00ee 3046     		mov	r0, r6
 1605 00f0 FFF7FEFF 		bl	serial_write
 1606              	.LVL207:
 155:grbl/print.c  ****     if (i == decimal_places) { serial_write('.'); } // Insert decimal point in right place.
 1607              		.loc 1 155 0
 1608 00f4 E3B2     		uxtb	r3, r4
 1609              	.LVL208:
 156:grbl/print.c  ****     serial_write(buf[i-1]);
 1610              		.loc 1 156 0
 1611 00f6 012B     		cmp	r3, #1
 1612 00f8 15F8016D 		ldrb	r6, [r5, #-1]!	@ zero_extendqisi2
 1613 00fc F6D1     		bne	.L208
 1614 00fe 2E20     		movs	r0, #46
 1615 0100 FFF7FEFF 		bl	serial_write
 1616              	.LVL209:
 157:grbl/print.c  ****   }
 1617              		.loc 1 157 0
 1618 0104 3046     		mov	r0, r6
 1619              	.LBE64:
 1620              	.LBE66:
 1621              		.loc 1 180 0
 1622 0106 04B0     		add	sp, sp, #16
 1623              	.LCFI35:
 1624              		.cfi_remember_state
 1625              		.cfi_def_cfa_offset 16
 1626              		@ sp needed
 1627 0108 BDE87040 		pop	{r4, r5, r6, lr}
 1628              	.LCFI36:
 1629              		.cfi_restore 14
 1630              		.cfi_restore 6
 1631              		.cfi_restore 5
 1632              		.cfi_restore 4
 1633              		.cfi_def_cfa_offset 0
 1634              	.LVL210:
 1635              	.LBB67:
 1636              	.LBB60:
 157:grbl/print.c  ****   }
 1637              		.loc 1 157 0
 1638 010c FFF7FEBF 		b	serial_write
 1639              	.LVL211:
 1640              	.L205:
 1641              	.LCFI37:
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 36


 1642              		.cfi_restore_state
 127:grbl/print.c  ****     n = -n;
 1643              		.loc 1 127 0
 1644 0110 2D20     		movs	r0, #45
 1645 0112 FFF7FEFF 		bl	serial_write
 1646              	.LVL212:
 128:grbl/print.c  ****   }
 1647              		.loc 1 128 0
 1648 0116 04F10044 		add	r4, r4, #-2147483648
 1649              	.LVL213:
 1650 011a 7EE7     		b	.L181
 1651              	.LVL214:
 1652              	.L184:
 157:grbl/print.c  ****   }
 1653              		.loc 1 157 0
 1654 011c 3020     		movs	r0, #48
 1655              	.LVL215:
 1656              	.LBE60:
 1657              	.LBE67:
 1658              		.loc 1 180 0
 1659 011e 04B0     		add	sp, sp, #16
 1660              	.LCFI38:
 1661              		.cfi_remember_state
 1662              		.cfi_def_cfa_offset 16
 1663              		@ sp needed
 1664 0120 BDE87040 		pop	{r4, r5, r6, lr}
 1665              	.LCFI39:
 1666              		.cfi_restore 14
 1667              		.cfi_restore 6
 1668              		.cfi_restore 5
 1669              		.cfi_restore 4
 1670              		.cfi_def_cfa_offset 0
 1671              	.LBB68:
 1672              	.LBB61:
 157:grbl/print.c  ****   }
 1673              		.loc 1 157 0
 1674 0124 FFF7FEBF 		b	serial_write
 1675              	.LVL216:
 1676              	.L206:
 1677              	.LCFI40:
 1678              		.cfi_restore_state
 1679              	.LBE61:
 1680              	.LBE68:
 1681              	.LBB69:
 1682              	.LBB65:
 127:grbl/print.c  ****     n = -n;
 1683              		.loc 1 127 0
 1684 0128 2D20     		movs	r0, #45
 1685 012a FFF7FEFF 		bl	serial_write
 1686              	.LVL217:
 128:grbl/print.c  ****   }
 1687              		.loc 1 128 0
 1688 012e 04F10044 		add	r4, r4, #-2147483648
 1689              	.LVL218:
 1690 0132 AFE7     		b	.L173
 1691              	.LVL219:
 1692              	.L207:
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 37


 150:grbl/print.c  ****     buf[i++] = '0';
 1693              		.loc 1 150 0
 1694 0134 012B     		cmp	r3, #1
 1695 0136 D0D0     		beq	.L176
 1696 0138 2944     		add	r1, r1, r5
 1697              	.LVL220:
 1698 013a 11F8116C 		ldrb	r6, [r1, #-17]	@ zero_extendqisi2
 1699 013e D1E7     		b	.L178
 1700              	.L210:
 1701              		.align	3
 1702              	.L209:
 1703 0140 6568E157 		.word	1474390117
 1704 0144 5128A43F 		.word	1067722833
 1705 0148 00000000 		.word	settings
 1706 014c CDCCCCCC 		.word	-858993459
 1707 0150 00002041 		.word	1092616192
 1708              	.LBE65:
 1709              	.LBE69:
 1710              		.cfi_endproc
 1711              	.LFE710:
 1713              		.text
 1714              	.Letext0:
 1715              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1716              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1717              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1718              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1719              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1720              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 1721              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1722              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 1723              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1724              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1725              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h"
 1726              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
 1727              		.file 14 "stm32/stm32utilities.h"
 1728              		.file 15 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 1729              		.file 16 "grbl/settings.h"
 1730              		.file 17 "grbl/system.h"
 1731              		.file 18 "grbl/gcode.h"
 1732              		.file 19 "grbl/serial.h"
ARM GAS  /var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 print.c
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:16     .text.printString:0000000000000000 $t
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:24     .text.printString:0000000000000000 printString
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:61     .text.print_uint8_base10:0000000000000000 $t
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:69     .text.print_uint8_base10:0000000000000000 print_uint8_base10
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:185    .text.print_uint8_base10:000000000000007c $d
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:191    .text.print_uint8_base2_ndigit:0000000000000000 $t
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:199    .text.print_uint8_base2_ndigit:0000000000000000 print_uint8_base2_ndigit
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:275    .text.print_uint32_base10:0000000000000000 $t
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:283    .text.print_uint32_base10:0000000000000000 print_uint32_base10
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:377    .text.print_uint32_base10:0000000000000058 $d
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:382    .text.printInteger:0000000000000000 $t
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:390    .text.printInteger:0000000000000000 printInteger
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:587    .text.printInteger:00000000000000b4 $d
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:600    .text.printFloat:0000000000000000 $t
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:608    .text.printFloat:0000000000000000 printFloat
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:985    .text.printFloat:00000000000001d4 $d
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:995    .text.printFloat_CoordValue:0000000000000000 $t
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:1003   .text.printFloat_CoordValue:0000000000000000 printFloat_CoordValue
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:1389   .text.printFloat_CoordValue:00000000000001e8 $d
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:1401   .text.printFloat_RateValue:0000000000000000 $t
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:1409   .text.printFloat_RateValue:0000000000000000 printFloat_RateValue
/var/folders/m1/3lv6xmzs0mlckxs4mx90nfb40000gn/T//ccqEYcrz.s:1703   .text.printFloat_RateValue:0000000000000140 $d

UNDEFINED SYMBOLS
serial_write
__aeabi_fcmplt
__aeabi_fmul
__aeabi_fadd
__aeabi_f2iz
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
settings
